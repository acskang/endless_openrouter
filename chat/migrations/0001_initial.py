# Generated by Django 5.2 on 2025-08-05 03:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='질문 내용')),
                ('question_type', models.CharField(choices=[('text', '텍스트'), ('image', '이미지 포함'), ('file', '파일 포함')], default='text', max_length=20, verbose_name='질문 유형')),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='question_files/', verbose_name='첨부 파일')),
                ('is_processed', models.BooleanField(default=False, verbose_name='처리됨')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='삭제됨')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 질문',
                'verbose_name_plural': '사용자 질문들',
                'db_table': 'user_questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='AI 응답 내용')),
                ('ai_model', models.CharField(help_text='예: gpt-4, claude-3, gemini-pro 등', max_length=50, verbose_name='AI 모델')),
                ('response_type', models.CharField(choices=[('text', '텍스트'), ('code', '코드'), ('markdown', '마크다운'), ('json', 'JSON'), ('error', '오류 응답')], default='text', max_length=20, verbose_name='응답 유형')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='응답 시간(초)')),
                ('token_count', models.IntegerField(blank=True, null=True, verbose_name='토큰 수')),
                ('user_rating', models.IntegerField(blank=True, choices=[(1, '1점'), (2, '2점'), (3, '3점'), (4, '4점'), (5, '5점')], null=True, verbose_name='사용자 평점 (1-5)')),
                ('user_feedback', models.TextField(blank=True, verbose_name='사용자 피드백')),
                ('response_order', models.PositiveIntegerField(default=1, verbose_name='응답 순서')),
                ('is_selected', models.BooleanField(default=False, help_text='사용자가 선택한 최적의 응답인지 여부', verbose_name='선택된 응답')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='삭제됨')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_responses', to='chat.userquestion', verbose_name='관련 질문')),
            ],
            options={
                'verbose_name': 'AI 응답',
                'verbose_name_plural': 'AI 응답들',
                'db_table': 'ai_responses',
                'ordering': ['question', 'response_order', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='userquestion',
            index=models.Index(fields=['user', 'created_at'], name='user_questi_user_id_5670b7_idx'),
        ),
        migrations.AddIndex(
            model_name='userquestion',
            index=models.Index(fields=['created_at'], name='user_questi_created_8e5300_idx'),
        ),
        migrations.AddIndex(
            model_name='userquestion',
            index=models.Index(fields=['is_deleted'], name='user_questi_is_dele_85006c_idx'),
        ),
        migrations.AddIndex(
            model_name='userquestion',
            index=models.Index(fields=['is_processed'], name='user_questi_is_proc_824ef0_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['question', 'created_at'], name='ai_response_questio_8a8c43_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['ai_model', 'created_at'], name='ai_response_ai_mode_7f21fe_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['is_selected'], name='ai_response_is_sele_fd0b54_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['is_deleted'], name='ai_response_is_dele_e2cb8a_idx'),
        ),
        migrations.AddIndex(
            model_name='airesponse',
            index=models.Index(fields=['response_order'], name='ai_response_respons_105857_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='airesponse',
            unique_together={('question', 'response_order')},
        ),
    ]
